name: ecr push image

on:
  push:

jobs:
  push:
    runs-on: ubuntu-latest
    # `permissions` を設定しないと OIDC が使えないので注意
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3

      # AWS 認証
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: "ap-northeast-1"
          role-to-assume: "arn:aws:iam::730595405892:role/github_action_role"

      # ECR ログイン
      - uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr # outputs で参照するために id を設定

      # Docker イメージを build・push する
      - name: build and push docker image to ecr
        env:
          # ECR レジストリを `aws-actions/amazon-ecr-login` アクションの `outputs.registry` から取得
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          # イメージを push する ECR リポジトリ名
          REPOSITORY: toy
          # 任意のイメージタグ
          # 今回は Git のコミットハッシュにしておく
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build . --tag ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}


#env:
#  AWS_REGION: ap-northeast-1                   # set this to your preferred AWS region, e.g. us-west-1
#  ECR_REPOSITORY: githubactions-httpd          # set this to your Amazon ECR repository name
#  ECS_SERVICE: httpd-service               # set this to your Amazon ECS service name
#  ECS_CLUSTER: httpd-cluster                # set this to your Amazon ECS cluster name
#  ECS_TASK_DEFINITION: task-definition.json # set this to the path to your Amazon ECS task definition
#  # file, e.g. .aws/task-definition.json
#  CONTAINER_NAME: httpd-container           # set this to the name of the container in the
#  # containerDefinitions section of your task definition